# -*- coding: utf-8 -*-
"""
Created on Mon Jan 05 21:29:11 2015
:Version: 2.7.8
:Author: J. Tolton

:Project Euler Problem 2:

    Each new term in the Fibonacci sequence is 
    generated by adding the previous two terms. 
    By starting with 1 and 2, the first 10 terms will be:

        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        
    By considering the terms in the Fibonacci sequence 
    whose values do not exceed four million, find the 
    sum of the even-valued terms.
"""

from MyDevTools.MyDebug import timeIt
from MyDevTools.MyPerformanceTools import memo

@memo
def fib(n):
    return n if n == 1 or n == 0 else fib(n-1)+fib(n-2)

@timeIt
def main():
    stop, _sum, n, term = 4*10**6, 0, 0, 0
    while term <= stop:
        term = fib(n)
        _sum += term if not term % 2 else 0
        n += 1
    print _sum
    
if __name__=='__main__':
    main()


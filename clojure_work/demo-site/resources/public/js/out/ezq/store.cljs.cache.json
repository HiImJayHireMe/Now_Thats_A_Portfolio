["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$localStorage",["^ ","~$setItem",["^ "],"~$getItem",["^ "]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$ezq.store","~:imports",null,"~:requires",["^ ","~$r","~$cljs.reader","^=","^="],"~:uses",null,"~:defs",["^ ","~$store",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/jay/_project/personal/demo/clsj/qdemo/snakeq/src/ezq/store.cljs","~:line",4,"~:column",7,"~:end-line",4,"~:end-column",12,"~:arglists",["~#list",["~$quote",["^I",[["~$state"]]]]],"~:doc","Save the given application state in HTML5 localstorage"],"^9","~$ezq.store/store","~:variadic",false,"^C","src/ezq/store.cljs","^G",12,"~:method-params",["^I",[["^K"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^E",1,"^D",4,"^F",4,"~:max-fixed-arity",1,"~:fn-var",true,"^H",["^I",["^J",["^I",[["^K"]]]]],"^L","Save the given application state in HTML5 localstorage"],"~$load",["^ ","^A",null,"^B",["^ ","^C","/home/jay/_project/personal/demo/clsj/qdemo/snakeq/src/ezq/store.cljs","^D",9,"^E",16,"^F",9,"^G",20,"~:export",true,"^H",["^I",["^J",["^I",[[]]]]],"^L","Load the application state from HTML5 localstorage, nil if it doesn't exist"],"^9","~$ezq.store/load","^N",false,"^C","src/ezq/store.cljs","^G",20,"^O",["^I",[[]]],"^P",null,"^U",true,"^Q",["^I",[null,null]],"^E",1,"^D",9,"^F",9,"^R",0,"^S",true,"^H",["^I",["^J",["^I",[[]]]]],"^L","Load the application state from HTML5 localstorage, nil if it doesn't exist"],"~$init-persistence",["^ ","^A",null,"^B",["^ ","^C","/home/jay/_project/personal/demo/clsj/qdemo/snakeq/src/ezq/store.cljs","^D",15,"^E",7,"^F",15,"^G",23,"^H",["^I",["^J",["^I",[["~$app"]]]]],"^L","Given an application, watch it for changes and persist via localstorage"],"^9","~$ezq.store/init-persistence","^N",false,"^C","src/ezq/store.cljs","^G",23,"^O",["^I",[["^X"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^D",15,"^F",15,"^R",1,"^S",true,"^H",["^I",["^J",["^I",[["^X"]]]]],"^L","Given an application, watch it for changes and persist via localstorage"]],"~:require-macros",["^ ","~$r","^=","^=","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~:state","~:persistence"]],"~:order",["^11","^12"]],"^L",null]
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name dirac.runtime.bootstrap, :imports nil, :requires {brepl clojure.browser.repl, clojure.browser.repl clojure.browser.repl}, :uses nil, :defs {*boostrapped?* {:name dirac.runtime.bootstrap/*boostrapped?*, :file "resources/public/js/out/dirac/runtime/bootstrap.cljs", :line 7, :column 1, :end-line 7, :end-column 30, :dynamic true, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/bootstrap.cljs", :line 7, :column 16, :end-line 7, :end-column 30, :dynamic true}}, *boostrap-timeout* {:name dirac.runtime.bootstrap/*boostrap-timeout*, :file "resources/public/js/out/dirac/runtime/bootstrap.cljs", :line 8, :column 1, :end-line 8, :end-column 34, :dynamic true, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/bootstrap.cljs", :line 8, :column 16, :end-line 8, :end-column 34, :dynamic true}}, *boostrap-listeners* {:name dirac.runtime.bootstrap/*boostrap-listeners*, :file "resources/public/js/out/dirac/runtime/bootstrap.cljs", :line 9, :column 1, :end-line 9, :end-column 36, :dynamic true, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/bootstrap.cljs", :line 9, :column 16, :end-line 9, :end-column 36, :dynamic true}}, notify-listeners! {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/bootstrap.cljs", :line 13, :column 7, :end-line 13, :end-column 24, :arglists (quote ([listeners]))}, :name dirac.runtime.bootstrap/notify-listeners!, :variadic false, :file "resources/public/js/out/dirac/runtime/bootstrap.cljs", :end-column 24, :method-params ([listeners]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([listeners]))}, boostrap-if-needed! {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/bootstrap.cljs", :line 17, :column 7, :end-line 17, :end-column 26, :arglists (quote ([]))}, :name dirac.runtime.bootstrap/boostrap-if-needed!, :variadic false, :file "resources/public/js/out/dirac/runtime/bootstrap.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, call-after-document-finished-loading {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/bootstrap.cljs", :line 24, :column 7, :end-line 24, :end-column 43, :arglists (quote ([f timeout]))}, :name dirac.runtime.bootstrap/call-after-document-finished-loading, :variadic false, :file "resources/public/js/out/dirac/runtime/bootstrap.cljs", :end-column 43, :method-params ([f timeout]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f timeout]))}, bootstrap! {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/bootstrap.cljs", :line 41, :column 7, :end-line 41, :end-column 17, :arglists (quote ([] [callback])), :doc "Reusable browser REPL bootstrapping. Patches the essential functions\n  in goog.base to support re-loading of namespaces after page load.\n\n  Note that this function might do its job asynchronously if at the time of calling the document is still loading.\n  You may provide a callback which will be called immediatelly after bootstrapping happens.\n  It has no effect if called after bootstrapping has been already done. Only the callback is called immediatelly.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [callback]), :arglists ([] [callback]), :arglists-meta (nil nil)}}, :name dirac.runtime.bootstrap/bootstrap!, :variadic false, :file "resources/public/js/out/dirac/runtime/bootstrap.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [callback]), :arglists ([] [callback]), :arglists-meta (nil nil)}, :method-params ([] [callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists ([] [callback]), :doc "Reusable browser REPL bootstrapping. Patches the essential functions\n  in goog.base to support re-loading of namespaces after page load.\n\n  Note that this function might do its job asynchronously if at the time of calling the document is still loading.\n  You may provide a callback which will be called immediatelly after bootstrapping happens.\n  It has no effect if called after bootstrapping has been already done. Only the callback is called immediatelly."}}, :require-macros nil, :doc nil}
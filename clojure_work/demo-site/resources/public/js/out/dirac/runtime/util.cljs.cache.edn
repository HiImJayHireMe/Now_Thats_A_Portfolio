{:rename-macros {}, :renames {}, :use-macros {get-current-version dirac.project, get-current-browser-name dirac.runtime.util, oget dirac.runtime.oops, get-current-platform-name dirac.runtime.util}, :excludes #{}, :name dirac.runtime.util, :imports nil, :requires {prefs dirac.runtime.prefs, ua-platform goog.labs.userAgent.platform, ua-browser goog.labs.userAgent.browser, goog.object goog.object, goog.userAgent goog.userAgent, goog.labs.userAgent.platform goog.labs.userAgent.platform, dirac.project dirac.project, ua goog.userAgent, goog.labs.userAgent.browser goog.labs.userAgent.browser, dirac.runtime.prefs dirac.runtime.prefs}, :uses {get-current-version dirac.project}, :defs {in-node-context? {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 56, :column 17, :end-line 56, :end-column 33, :dynamic true, :arglists (quote ([]))}, :name dirac.runtime.util/in-node-context?, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, platform-str {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 27, :column 7, :end-line 27, :end-column 19, :arglists (quote ([name name-placeholder version version-placeholder]))}, :name dirac.runtime.util/platform-str, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 19, :method-params ([name name-placeholder version version-placeholder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 4, :fn-var true, :arglists (quote ([name name-placeholder version version-placeholder]))}, str-or-placeholder {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 22, :column 7, :end-line 22, :end-column 25, :arglists (quote ([val placeholder]))}, :name dirac.runtime.util/str-or-placeholder, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 25, :method-params ([val placeholder]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([val placeholder]))}, display-banner-if-needed! {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 97, :column 7, :end-line 97, :end-column 32, :arglists (quote ([features-to-install feature-groups]))}, :name dirac.runtime.util/display-banner-if-needed!, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 32, :method-params ([features-to-install feature-groups]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([features-to-install feature-groups]))}, get-browser-platform-info {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 35, :column 7, :end-line 35, :end-column 32, :arglists (quote ([]))}, :name dirac.runtime.util/get-browser-platform-info, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-version-info {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 13, :column 17, :end-line 13, :end-column 34, :dynamic true, :arglists (quote ([version]))}, :name dirac.runtime.util/make-version-info, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 34, :method-params ([version]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([version]))}, get-node-info {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 42, :column 17, :end-line 42, :end-column 30, :dynamic true, :arglists (quote ([root]))}, :name dirac.runtime.util/get-node-info, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 30, :method-params ([root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([root]))}, unknown-feature-msg {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 71, :column 17, :end-line 71, :end-column 36, :dynamic true, :arglists (quote ([feature known-features lib-info]))}, :name dirac.runtime.util/unknown-feature-msg, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 36, :method-params ([feature known-features lib-info]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 71, :end-line 71, :max-fixed-arity 3, :fn-var true, :arglists (quote ([feature known-features lib-info]))}, install-feature! {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 130, :column 7, :end-line 130, :end-column 23, :arglists (quote ([feature features-to-install available-fn install-fn]))}, :name dirac.runtime.util/install-feature!, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 23, :method-params ([feature features-to-install available-fn install-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 4, :fn-var true, :arglists (quote ([feature features-to-install available-fn install-fn]))}, feature-list-display {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 85, :column 7, :end-line 85, :end-column 27, :arglists (quote ([installed-features feature-groups]))}, :name dirac.runtime.util/feature-list-display, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 27, :method-params ([installed-features feature-groups]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([installed-features feature-groups]))}, display-banner! {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 92, :column 7, :end-line 92, :end-column 22, :arglists (quote ([installed-features feature-groups fmt & params])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(installed-features feature-groups fmt params)], :arglists ([installed-features feature-groups fmt & params]), :arglists-meta (nil)}}, :name dirac.runtime.util/display-banner!, :variadic true, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(installed-features feature-groups fmt params)], :arglists ([installed-features feature-groups fmt & params]), :arglists-meta (nil)}, :method-params [(installed-features feature-groups fmt params)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 3, :fn-var true, :arglists ([installed-features feature-groups fmt & params])}, get-lib-info {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 19, :column 7, :end-line 19, :end-column 19, :arglists (quote ([]))}, :name dirac.runtime.util/get-lib-info, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, make-lib-info {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 16, :column 17, :end-line 16, :end-column 30, :dynamic true, :arglists (quote ([version]))}, :name dirac.runtime.util/make-lib-info, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 30, :method-params ([version]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([version]))}, resolve-features! {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 120, :column 7, :end-line 120, :end-column 24, :arglists (quote ([features-desc feature-groups]))}, :name dirac.runtime.util/resolve-features!, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 24, :method-params ([features-desc feature-groups]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 2, :fn-var true, :arglists (quote ([features-desc feature-groups]))}, feature-for-display {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 81, :column 7, :end-line 81, :end-column 26, :arglists (quote ([installed-features feature]))}, :name dirac.runtime.util/feature-for-display, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 26, :method-params ([installed-features feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([installed-features feature]))}, is-known-feature? {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 112, :column 7, :end-line 112, :end-column 24, :arglists (quote ([known-features feature]))}, :name dirac.runtime.util/is-known-feature?, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 24, :method-params ([known-features feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 2, :fn-var true, :arglists (quote ([known-features feature]))}, get-browser-version-info {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 30, :column 7, :end-line 30, :end-column 31, :arglists (quote ([]))}, :name dirac.runtime.util/get-browser-version-info, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, feature-not-available-msg {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 75, :column 17, :end-line 75, :end-column 42, :dynamic true, :arglists (quote ([feature]))}, :name dirac.runtime.util/feature-not-available-msg, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 42, :method-params ([feature]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([feature]))}, get-node-description {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 53, :column 17, :end-line 53, :end-column 37, :dynamic true, :arglists (quote ([node-info]))}, :name dirac.runtime.util/get-node-description, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 37, :method-params ([node-info]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node-info]))}, get-js-context-description {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 61, :column 17, :end-line 61, :end-column 43, :dynamic true, :arglists (quote ([]))}, :name dirac.runtime.util/get-js-context-description, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 43, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 61, :end-line 61, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, sanititze-features! {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 115, :column 7, :end-line 115, :end-column 26, :arglists (quote ([features feature-groups]))}, :name dirac.runtime.util/sanititze-features!, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 26, :method-params ([features feature-groups]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([features feature-groups]))}, report-unknown-features! {:protocol-inline nil, :meta {:file "/home/jay/_project/personal/demo/clsj/qdemo/snakeq/resources/public/js/out/dirac/runtime/util.cljs", :line 106, :column 7, :end-line 106, :end-column 31, :arglists (quote ([features known-features]))}, :name dirac.runtime.util/report-unknown-features!, :variadic false, :file "resources/public/js/out/dirac/runtime/util.cljs", :end-column 31, :method-params ([features known-features]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 2, :fn-var true, :arglists (quote ([features known-features]))}}, :require-macros {dirac.runtime.util dirac.runtime.util, dirac.runtime.oops dirac.runtime.oops, dirac.project dirac.project, prefs dirac.runtime.prefs, dirac.runtime.prefs dirac.runtime.prefs}, :cljs.analyzer/constants {:seen #{:else :default :all :version :dont-display-banner :platform}, :order [:version :platform :all :dont-display-banner :default :else]}, :doc nil}